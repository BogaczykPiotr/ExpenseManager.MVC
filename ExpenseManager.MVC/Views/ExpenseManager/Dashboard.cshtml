@model ExpenseManager.Application.DTOS.StatDto
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json;
@inject SignInManager<IdentityUser> SignInManager
@{
    var settingsDto = ViewData["SettingsDto"] as ExpenseManager.Application.DTOS.SettingDto;
}
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

<div class="main-rectangle">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (settingsDto.Language == "english")
        {
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/TotalAmount.png")" alt="TotalAmount">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.TotalAmount@settingsDto.Currency</p>
                <p class="stat-text">Total Amount</p>
            </div>
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/Spent.png")">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.Spent@settingsDto.Currency</p>
                <p class="stat-text">Spent (Month)</p>
            </div>
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/Left.png")">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.Left@settingsDto.Currency</p>
                <p class="stat-text">Left (Month)</p>
            </div>
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/SavingGoal.png")">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.SavingGoal.Goal@settingsDto.Currency</p>
                <p class="stat-text">Saving Goal</p>
            </div>
            <select class="chart-selector">
                <!-- for ASP edit-->
                <option>Total Amount</option>
                <option>Spent</option>
                <option>Left</option>
                <option>Saving Goal</option>
            </select>
            <select class="time-selector">
                <!-- for ASP edit-->
                <option>1 week</option>
                <option>1 month</option>
                <option>1 year</option>
            </select>

            <div class="chart">
                <canvas class="dashboard-chart"></canvas> <!--for ASP edit-->
            </div>
        }
        else if (settingsDto.Language == "polski")
        {
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/TotalAmount.png")" alt="TotalAmount">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.TotalAmount@settingsDto.Currency</p>
                <p class="stat-text">Całkowite wpływy</p>
            </div>
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/Spent.png")">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.Spent@settingsDto.Currency</p>
                <p class="stat-text">Wydano (1 mies)</p>
            </div>
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/Left.png")">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.Left@settingsDto.Currency</p>
                <p class="stat-text">Zostało (1 mies)</p>
            </div>
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/SavingGoal.png")">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.SavingGoal.Goal@settingsDto.Currency</p>
                <p class="stat-text">Cel Oszczędnościowy</p>
            </div>
            <select class="chart-selector">
                <!-- for ASP edit-->
                <option>Całkowite wpływy</option>
                <option>Wydano</option>
                <option>Zostało</option>
                <option>Cel Oszczędnościowy</option>
            </select>
            <select class="time-selector">
                <!-- for ASP edit-->
                <option>1 tydzień</option>
                <option>1 miesiąc</option>
                <option>1 rok</option>
            </select>

            <div class="chart">
                <canvas class="dashboard-chart"></canvas> <!--for ASP edit-->
            </div>
        }
        else if (settingsDto.Language == "deutsch")
        {
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/TotalAmount.png")" alt="TotalAmount">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.TotalAmount@settingsDto.Currency</p>
                <p class="stat-text">Gesamtmenge</p>
            </div>
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/Spent.png")">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.Spent@settingsDto.Currency</p>
                <p class="stat-text">Ausgegebenes (Monat)</p>
            </div>
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/Left.png")">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.Left@settingsDto.Currency</p>
                <p class="stat-text">bleibt (Monat)</p>
            </div>
            <div class="stats">
                <img class="icon-img" src="@Url.Content("~/images/SavingGoal.png")">
                <img class="more-img" src="@Url.Content("~/Images/more.png")" alt="show more">
                <p class="values">@Model.SavingGoal.Goal@settingsDto.Currency</p>
                <p class="stat-text">Einsparungsziel</p>
            </div>
            <select class="chart-selector">
                <!-- for ASP edit-->
                <option>Gesamtmenge</option>
                <option>Ausgegebenes</option>
                <option>bleibt</option>
                <option>Einsparungsziel</option>
            </select>
            <select class="time-selector">
                <!-- for ASP edit-->
                <option>1 Woche</option>
                <option>1 Monat</option>
                <option>1 Jahr</option>
            </select>

            <div class="chart">
                <canvas class="dashboard-chart"></canvas> <!--for ASP edit-->
            </div>
        }

    }
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js" src="@Url.Content("~/js/site.js")"></script>
<script>
    let dataValues = @Html.Raw(JsonConvert.SerializeObject(ViewData["Values"]));
    let totalAmountInMonth = Array.from({ length: 12 }, () => 0);
    let totalSpentInMonth = Array.from({ length: 12 }, () => 0);
    let totalLeftInMonth = Array.from({ length: 12 }, () => 0);

    dataValues.forEach(function (transfer) {
        let transferDate = new Date(transfer.CreatedAt).getMonth();
        if (transfer.Ingoing === true) {
            totalAmountInMonth[transferDate] += transfer.Value;
        }
        else if (!transfer.Ingoing) {
            totalSpentInMonth[transferDate] += transfer.Value;
        }

        totalLeftInMonth[transferDate] = totalAmountInMonth[transferDate] - totalSpentInMonth[transferDate]
    });

    dataValues.forEach(function (transfer) {
            let transferDate = new Date(transfer.CreatedAt);
            let transferMonth = transferDate.getMonth();
            
    });


    let canvas = document.querySelector('.dashboard-chart')

    let chartSelector = document.querySelector('.chart-selector')
    let timeSelector = document.querySelector('.time-selector')

    let data = {
        labels: ['0', '4', '8', '12', '16', '20', '24'],
        datasets: [
            {
                data: [12, 19, 3, 5, 2, 3, 12, 3, 14, 5, 6, 12],
                borderColor: 'rgba(255, 140, 0, 1)',
                borderWidth: 3,
            },
        ],
    }

    let options = {
        scales: {
            y: {
                beginAtZero: true,
            },
        },
        plugins: {
            legend: {
                display: false,
            },
        },
    }

    let chart = new Chart(canvas, {
        type: 'line',
        data: data,
        options: options,
    })

    chartSelector.addEventListener('change', function () {
        if (chartSelector.value === 'Total Amount') {
            data.datasets[0].data = [totalAmountInMonth[0], totalAmountInMonth[1], totalAmountInMonth[2], totalAmountInMonth[3], totalAmountInMonth[4], totalAmountInMonth[5], totalAmountInMonth[6], totalAmountInMonth[7], totalAmountInMonth[8], totalAmountInMonth[9], totalAmountInMonth[10], totalAmountInMonth[11], totalAmountInMonth[12]];
        } else if (chartSelector.value === 'Spent') {
            data.datasets[0].data = [totalSpentInMonth[0], totalSpentInMonth[1], totalSpentInMonth[2], totalSpentInMonth[3], totalSpentInMonth[4], totalSpentInMonth[5], totalSpentInMonth[6], totalSpentInMonth[7], totalSpentInMonth[8], totalSpentInMonth[9], totalSpentInMonth[10], totalSpentInMonth[11]]
        } else if (chartSelector.value === 'Left') {
            data.datasets[0].data = [totalLeftInMonth[0], totalLeftInMonth[1], totalLeftInMonth[2], totalLeftInMonth[3], totalLeftInMonth[4], totalLeftInMonth[5], totalLeftInMonth[6], totalLeftInMonth[7], totalLeftInMonth[8], totalLeftInMonth[9], totalLeftInMonth[10], totalLeftInMonth[11]]
        } else if (chartSelector.value === 'Saving Goal') {
            data.datasets[0].data = [12, 3, 5, 9, 7, 4, 13, 6, 8, 2, 10, 9]
        }
        chart.update()
    })

    timeSelector.addEventListener('change', function () {
        if (timeSelector.value === '1 day') {
            data.labels = ['0', '4', '8', '12', '16', '20', '24']
        } else if (timeSelector.value === '1 week') {
            data.labels = ['1', '2', '3', '4', '5', '6', '7']
        } else if (timeSelector.value === '1 month') {
            data.labels = [
                '1',
                '2',
                '3',
                '4',
                '5',
                '6',
                '7',
                '8',
                '9',
                '10',
                '11',
                '12',
                '13',
                '14',
                '15',
                '16',
                '17',
                '18',
                '19',
                '20',
                '21',
                '22',
                '23',
                '24',
                '25',
                '26',
                '27',
                '28',
                '29',
                '30',
                '31',
            ]
        } else if (timeSelector.value === '1 year') {
            data.labels = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec']
            data.datasets[0].data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, totalAmountInMonth, 12]
        }
        if (data.labels.length > data.datasets[0].data.length) {
            let dataLabelsLength = data.labels.length
            let dataLength = data.datasets[0].data.length
            for (let i = dataLength; i < dataLabelsLength; i++) {
                data.datasets[0].data.push(0)
            }
        }
        chart.update()
    })

</script>
