@using Newtonsoft.Json;
@model ExpenseManager.MVC.Controllers.SavingViewModel

@{
    var settingsDto = ViewData["SettingsDto"] as ExpenseManager.Application.DTOS.SettingDto;

    var latestGoal = Model.SavingGoalDtos.OrderByDescending(g => g.CreatedAt).FirstOrDefault();
    var lastGoal = Model.SavingGoalDtos.Reverse().Skip(1).FirstOrDefault();

}
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

<div class="savings-main-rectangle">
    @if (settingsDto.Language == "english")
    {
        <form method="post">
            <p class="savings-saving-goal">Your Saving Goal</p>
            <div class="add-remove-saving-goal">
                <img class="remove-goal" src="@Url.Content("~/images/Minus.png")" alt="increase saving goal">
                <input class="input-value" type="hidden" value="@latestGoal.Goal" name="Goal" />
                <p class="saving-goal-value"></p>
                <img class="add-goal" src="@Url.Content("~/images/Plus.png")" alt="increase saving goal">
            </div>
            <button type="submit" class="confirm-saving-goal">Confirm</button>
        </form>
        <div class="failed summary">
            <p class="monthly-goal ">Your Last Monthly Goal</p>
            <p class="last-goal ">@(
            lastGoal?.Goal ?? 0
            )@settingsDto.Currency</p>
            <span class="goal-text"></span>
        </div>
        <div class="progress-chart-container">
            <p class="progress-text">Your Progress</p>
            <canvas class="progress-chart"></canvas>
        </div>
        <div class="actual-goal">
            <p class="actual-goal-text">Your Actual Goal</p>
        <p class="actual-goal-value">@latestGoal.Goal@settingsDto.Currency</p>
        </div>
    }
    else if(settingsDto.Language == "polski")
    {
        <form method="post">
            <p class="savings-saving-goal">Twój cel Oszczędnościowy</p>
            <div class="add-remove-saving-goal">
                <img class="remove-goal" src="@Url.Content("~/images/Minus.png")" alt="increase saving goal">
                <input class="input-value" type="hidden" value="@latestGoal.Goal" name="Goal" />
                <p class="saving-goal-value"></p>
                <img class="add-goal" src="@Url.Content("~/images/Plus.png")" alt="increase saving goal">
            </div>
            <button type="submit" class="confirm-saving-goal">Zatwierdź</button>
        </form>
        <div class="failed summary">
            <p class="monthly-goal ">Your Last Monthly Goal</p>
            <p class="last-goal ">
                @(
                    lastGoal?.Goal ?? 0
                    )@settingsDto.Currency
            </p>
            <span class="goal-text"></span>
        </div>
        <div class="progress-chart-container">
            <p class="progress-text">Twój Postęp</p>
            <canvas class="progress-chart"></canvas>
        </div>
        <div class="actual-goal">
            <p class="actual-goal-text">Twój Aktualny Cel</p>
            <p class="actual-goal-value">@latestGoal.Goal@settingsDto.Currency</p>
        </div>
    }
    else if (settingsDto.Language == "deutsch")
    {
        <form method="post">
            <p class="savings-saving-goal">Ihr Sparziel</p>
            <div class="add-remove-saving-goal">
                <img class="remove-goal" src="@Url.Content("~/images/Minus.png")" alt="increase saving goal">
                <input class="input-value" type="hidden" value="@latestGoal.Goal" name="Goal" />
                <p class="saving-goal-value"></p>
                <img class="add-goal" src="@Url.Content("~/images/Plus.png")" alt="increase saving goal">
            </div>
            <button type="submit" class="confirm-saving-goal">Bestätigen Sie</button>
        </form>
        <div class="failed summary">
            <p class="monthly-goal ">Your Last Monthly Goal</p>
            <p class="last-goal ">
                @(
                    lastGoal?.Goal ?? 0
                    )@settingsDto.Currency
            </p>
            <span class="goal-text"></span>
        </div>
        <div class="progress-chart-container">
            <p class="progress-text">Ihr Fortschritt</p>
            <canvas class="progress-chart"></canvas>
        </div>
        <div class="actual-goal">
            <p class="actual-goal-text">Ihr aktuelles Sparziel</p>
            <p class="actual-goal-value">@latestGoal.Goal@settingsDto.Currency</p>
        </div>
    }
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js" src="@Url.Content("~/js/site.js")"></script>
<script>
    let savingGoalValues = @Html.Raw(JsonConvert.SerializeObject(Model.SavingGoalDtos));

    let savingGoalInMonth = Array.from({ length: 12 }, () => 0);

        savingGoalValues.forEach(function (savingGoal) {
            let savingGoalDate = new Date(savingGoal.CreatedAt).getMonth()
            savingGoalInMonth[savingGoalDate] = savingGoal.Goal
        });
        
        let actualMonth = new Date().getMonth();


        const canvas = document.querySelector('.progress-chart')
        const value = document.querySelector('.saving-goal-value')
        const plus = document.querySelector('.add-goal')
        const minus = document.querySelector('.remove-goal')
        const summary = document.querySelector('.summary')
        const lastGoal = document.querySelector('.last-goal')
        const goalText = document.querySelector('.goal-text')
        const inputValue = document.querySelector('.input-value')
        let newValue
        plus.addEventListener('click', function () {
            let currentValue = parseInt(value.textContent)
            newValue = currentValue + 50
            value.textContent = newValue
            inputValue.value = newValue
        })
        minus.addEventListener('click', function () {
            let currentValue = parseInt(value.textContent)
            newValue = currentValue - 50
            if (newValue >= 0) {
                value.textContent = newValue
                inputValue.value = newValue
            }
        })
    if (parseInt(lastGoal.textContent) < savingGoalInMonth[actualMonth - 1]) {
            summary.classList.add('failed')
            summary.classList.remove('completed')
            goalText.innerText = 'Try in next month'
        } else {
            summary.classList.add('completed')
            summary.classList.remove('failed')
            goalText.innerText = 'Congratulations'
        }

        function updateValues() {
            let currentValue = parseInt(value.textContent)
            let inputNumber = parseInt(inputValue.value)

            if (!isNaN(inputNumber)) {
                if (inputNumber >= 0) {
                    value.textContent = inputNumber
                } else {
                    inputValue.value = currentValue
                }
            } else {
                inputValue.value = currentValue
            }
        }
        updateValues()

        inputValue.addEventListener('input', updateValues)

        let data = {
            labels: ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'july', 'aug', 'sep', 'oct', 'nov', 'dec'],
            datasets: [
                {
                data: savingGoalInMonth,
                    borderColor: 'rgba(255, 255, 0, 1)',
                    borderWidth: 3,
                },
            ],
        }

        let options = {
            scales: {
                y: {
                    beginAtZero: true,
                },
            },
            plugins: {
                legend: {
                    display: false,
                },
            },
        }
            
        let progressChart = new Chart(canvas, {
            type: 'line',
            data: data,
            options: options,
        })
</script>
    
    
